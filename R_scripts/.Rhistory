select(-n)%>%
group_by(ROWID, ROID, DEST)%>%
mutate(n=n())
OPERATIONS_BY_DEST <- OPERATIONS_BY_DEST_MS %>%
group_by(ID)%>%
mutate(n = length(unique(DEST)))%>%
filter(n == 1)%>%
select(-n)%>%
group_by(ROWID, ROID, DEST)%>%
summarize(N_RETURNEES = sum(N_RETURNEES, na.rm=T))
OPERATIONS_BY_DEST <- OPERATIONS_BY_DEST_MS %>%
group_by(ID)%>%
mutate(n = length(unique(DEST)))%>%
filter(n == 1)%>%
select(-n)%>%
group_by(ROWID, ROID, DEST)%>%
summarize(N_RETURNEES = sum(N_RETURNEES, na.rm=T))
OPERATIONS_BY_DEST <- OPERATIONS_BY_DEST_MS %>%
group_by(ID)%>%
mutate(n = length(unique(DEST)))%>%
filter(n == 1)%>%
select(-n)%>%
group_by(ROWID, ROID, DEST)%>%
summarize(N_RETURNEES = sum(N_RETURNEES, na.rm=T))%>%
# add fx_contrib
left_join(by_ms_2006_18 %>%
select(ROWID,
ROID,
FX_CONTRIB)%>%
bind_rows(costs_2019 %>%
select(ROID,
FX_CONTRIB))%>%
bind_rows(costs_2020_2021%>%
## filter out VRD operations
filter(!grepl("VRD", ROID)))%>%
select(ROID, FX_CONTRIB)
)
test <- by_ms_2006_18 %>%
select(ROWID,
ROID,
FX_CONTRIB)%>%
bind_rows(costs_2019 %>%
select(ROID,
FX_CONTRIB))%>%
bind_rows(costs_2020_2021%>%
## filter out VRD operations
filter(!grepl("VRD", ROID)))
View(test)
View(OPERATIONS_BY_DEST_MS)
OPERATIONS_BY_DEST <- OPERATIONS_BY_DEST_MS %>%
group_by(ID)%>%
mutate(n = length(unique(DEST)))%>%
filter(n == 1)%>%
select(-n)
View(OPERATIONS_BY_DEST)
View(by_ms_2006_18)
View(by_dest_2006_18)
## operations with one destination per MS
CONTRIB_PP_BY_DEST <- by_dest_2006_18 %>%
group_by(ROWID)%>%
mutate(n_dest = n())%>%
filter(n == 1)
## operations with one destination per MS
CONTRIB_PP_BY_DEST <- by_dest_2006_18 %>%
group_by(ROWID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)
View(CONTRIB_PP_BY_DEST)
CONTRIB_PP_BY_DEST <- by_dest_2006_18 %>%
group_by(ROWID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROWID, N_RETURNEES, DEST)
## operations with one destination per MS
CONTRIB_PP_BY_DEST <- by_dest_2006_18 %>%
group_by(ROWID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROWID, N_RETURNEES, DEST)%>%
left_join(by_ms_2006_18 %>%
select(ROW_ID, FX_CONTRIB))
## operations with one destination per MS
CONTRIB_PP_BY_DEST <- by_dest_2006_18 %>%
group_by(ROWID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROWID, N_RETURNEES, DEST)%>%
left_join(by_ms_2006_18 %>%
select(ROWID, FX_CONTRIB))
View(dests_2019_20)
dests_2019_20%>%
group_by(ROID, MSNAME)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)
View(costs_2019)
dests_2019_20%>%
group_by(ROID, MSNAME)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, MSNAME, N_RETURNEES, DEST)
dests_2019_20%>%
group_by(ROID, MSNAME)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, MSNAME, N_RETURNEES, DEST)%>%
left_join(costs_2019 %>%
select(ROID, MSNAME, FX_CONTRIB))
## operations with one destination per MS
CONTRIB_PP_BY_DEST <- by_dest_2006_18 %>%
group_by(ROWID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROWID, N_RETURNEES, DEST)%>%
left_join(by_ms_2006_18 %>%
select(ROWID, FX_CONTRIB))%>%
bind_rows(dests_2019_20%>%
group_by(ROID, MSNAME)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, MSNAME, N_RETURNEES, DEST)%>%
left_join(costs_2019 %>%
select(ROID, MSNAME, FX_CONTRIB)))
## operations with one destination per MS
CONTRIB_PP_BY_DEST <- by_dest_2006_18 %>%
group_by(ROWID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROWID, N_RETURNEES, DEST)%>%
left_join(by_ms_2006_18 %>%
select(ROWID, FX_CONTRIB))%>%
bind_rows(dests_2019_20%>%
group_by(ROID, MSNAME)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, MSNAME, N_RETURNEES, DEST)%>%
left_join(costs_2019 %>%
select(ROID, MSNAME, FX_CONTRIB))%>%
## throw out rows that are not in 2019 costs data
filter(!is.na(FX_CONTRIB)))
View(dests_2020_21)
View(returnees_2020_2021_split)
View(costs_2020_2021)
returnees_2020_2021_split %>%
group_by(ROID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, N_RETURNEES, DEST)%>%
left_join(costs_2020_2021 %>%
select(ROID, FX_CONTRIB))
## operations with one destination per MS
CONTRIB_PP_BY_DEST <- by_dest_2006_18 %>%
group_by(ROWID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROWID, N_RETURNEES, DEST)%>%
left_join(by_ms_2006_18 %>%
select(ROWID, FX_CONTRIB))%>%
bind_rows(dests_2019_20%>%
group_by(ROID, MSNAME)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, MSNAME, N_RETURNEES, DEST)%>%
left_join(costs_2019 %>%
select(ROID, MSNAME, FX_CONTRIB))%>%
## throw out rows that are not in 2019 costs data
filter(!is.na(FX_CONTRIB)))%>%
bind_rows(returnees_2020_2021_split %>%
group_by(ROID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, N_RETURNEES, DEST)%>%
left_join(costs_2020_2021 %>%
select(ROID, FX_CONTRIB))
)
as.numeric(NA) < 2009
## operations with one destination per MS
CONTRIB_PP_BY_DEST <- by_dest_2006_18 %>%
group_by(ROWID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROWID, N_RETURNEES, DEST)%>%
left_join(by_ms_2006_18 %>%
select(ROWID, FX_CONTRIB))%>%
bind_rows(dests_2019_20%>%
group_by(ROID, MSNAME)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, MSNAME, N_RETURNEES, DEST)%>%
left_join(costs_2019 %>%
select(ROID, MSNAME, FX_CONTRIB))%>%
## throw out rows that are not in 2019 costs data
filter(!is.na(FX_CONTRIB)))%>%
bind_rows(returnees_2020_2021_split %>%
group_by(ROID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, N_RETURNEES, DEST)%>%
left_join(costs_2020_2021 %>%
select(ROID, FX_CONTRIB))
)%>%
## it looks like contribution amounts were only included starting 2009.
## before 2009: exclude from averages
## after 2009: if NA, assume there was 0€ frontex contribution
filter(!(as.numeric(substr(ROWID, 1, 4)) < 2009) &
N_RETURNEES > 0) %>%
mutate(FX_CONTRIB_PP = replace_na(FX_CONTRIB_PP, 0))
## operations with one destination per MS
CONTRIB_PP_BY_DEST <- by_dest_2006_18 %>%
group_by(ROWID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROWID, N_RETURNEES, DEST)%>%
left_join(by_ms_2006_18 %>%
select(ROWID, FX_CONTRIB))%>%
bind_rows(dests_2019_20%>%
group_by(ROID, MSNAME)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, MSNAME, N_RETURNEES, DEST)%>%
left_join(costs_2019 %>%
select(ROID, MSNAME, FX_CONTRIB))%>%
## throw out rows that are not in 2019 costs data
filter(!is.na(FX_CONTRIB)))%>%
bind_rows(returnees_2020_2021_split %>%
group_by(ROID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, N_RETURNEES, DEST)%>%
left_join(costs_2020_2021 %>%
select(ROID, FX_CONTRIB))
)%>%
## it looks like contribution amounts were only included starting 2009.
## before 2009: exclude from averages
## after 2009: if NA, assume there was 0€ frontex contribution
filter(!(as.numeric(substr(ROWID, 1, 4)) < 2009) &
N_RETURNEES > 0) %>%
mutate(FX_CONTRIB = replace_na(FX_CONTRIB, 0))
## operations with one destination per MS
CONTRIB_PP_BY_DEST <- by_dest_2006_18 %>%
group_by(ROWID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROWID, N_RETURNEES, DEST)%>%
left_join(by_ms_2006_18 %>%
select(ROWID, FX_CONTRIB))%>%
bind_rows(dests_2019_20%>%
group_by(ROID, MSNAME)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, MSNAME, N_RETURNEES, DEST)%>%
left_join(costs_2019 %>%
select(ROID, MSNAME, FX_CONTRIB))%>%
## throw out rows that are not in 2019 costs data
filter(!is.na(FX_CONTRIB)))%>%
bind_rows(returnees_2020_2021_split %>%
group_by(ROID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, N_RETURNEES, DEST)%>%
left_join(costs_2020_2021 %>%
select(ROID, FX_CONTRIB))
)%>%
## it looks like contribution amounts were only included starting 2009.
## before 2009: exclude from averages
## after 2009: if NA, assume there was 0€ frontex contribution
filter(!(as.numeric(substr(ROWID, 1, 4)) < 2009 & as.numeric(substr(ROWID, 1, 4)) > 0) &
N_RETURNEES > 0) %>%
mutate(FX_CONTRIB = replace_na(FX_CONTRIB, 0))
## operations with one destination per MS
CONTRIB_PP_BY_DEST <- by_dest_2006_18 %>%
group_by(ROWID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROWID, N_RETURNEES, DEST)%>%
left_join(by_ms_2006_18 %>%
select(ROWID, FX_CONTRIB))%>%
bind_rows(dests_2019_20%>%
group_by(ROID, MSNAME)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, MSNAME, N_RETURNEES, DEST)%>%
left_join(costs_2019 %>%
select(ROID, MSNAME, FX_CONTRIB))%>%
## throw out rows that are not in 2019 costs data
filter(!is.na(FX_CONTRIB)))%>%
bind_rows(returnees_2020_2021_split %>%
group_by(ROID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, N_RETURNEES, DEST)%>%
left_join(costs_2020_2021 %>%
select(ROID, FX_CONTRIB))
)%>%
## it looks like contribution amounts were only included starting 2009.
## before 2009: exclude from averages
## after 2009: if NA, assume there was 0€ frontex contribution
filter(!(as.numeric(substr(ROWID, 1, 4)) < 2009 & !is.na(ROWID)) &
N_RETURNEES > 0) %>%
mutate(FX_CONTRIB = replace_na(FX_CONTRIB, 0))
## operations with one destination per MS
OPERATIONS_UNIQUE_DEST <- by_dest_2006_18 %>%
group_by(ROWID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROWID, N_RETURNEES, DEST)%>%
left_join(by_ms_2006_18 %>%
select(ROWID, FX_CONTRIB))%>%
bind_rows(dests_2019_20%>%
group_by(ROID, MSNAME)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, MSNAME, N_RETURNEES, DEST)%>%
left_join(costs_2019 %>%
select(ROID, MSNAME, FX_CONTRIB))%>%
## throw out rows that are not in 2019 costs data
filter(!is.na(FX_CONTRIB)))%>%
bind_rows(returnees_2020_2021_split %>%
group_by(ROID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, N_RETURNEES, DEST)%>%
left_join(costs_2020_2021 %>%
select(ROID, FX_CONTRIB))
)%>%
## it looks like contribution amounts were only included starting 2009.
## before 2009: exclude from averages
## after 2009: if NA, assume there was 0€ frontex contribution
filter(!(as.numeric(substr(ROWID, 1, 4)) < 2009 & !is.na(ROWID)) &
N_RETURNEES > 0) %>%
mutate(FX_CONTRIB = replace_na(FX_CONTRIB, 0))
OPERATIONS_UNIQUE_DEST
CONTRIB_PP_BY_DEST <- OPERATIONS_UNIQUE_DEST %>%
group_by(DEST)%>%
summarise(across(where(is.numeric), ~ sum(., na.rm=T)))
CONTRIB_PP_BY_DEST <- OPERATIONS_UNIQUE_DEST %>%
group_by(DEST)%>%
summarise(across(where(is.numeric), ~ sum(., na.rm=T)))%>%
# add average across countries
bind_rows(OPERATIONS_UNIQUE_DEST%>%
group_by(DEST = "average across all destinations")%>%
summarise(across(where(is.numeric), ~ sum(., na.rm=T))))
CONTRIB_PP_BY_DEST <- OPERATIONS_UNIQUE_DEST %>%
group_by(DEST)%>%
summarise(across(where(is.numeric), ~ sum(., na.rm=T)))%>%
# add average across countries
bind_rows(OPERATIONS_UNIQUE_DEST%>%
group_by(DEST = "average across all destinations")%>%
summarise(across(where(is.numeric), ~ sum(., na.rm=T))))%>%
mutate(FX_CONTRIB_PP = FX_CONTRIB / N_RETURNEES)
CONTRIB_PP_BY_DEST <- OPERATIONS_UNIQUE_DEST %>%
group_by(DEST)%>%
summarise(across(where(is.numeric), ~ sum(., na.rm=T)))%>%
# add average across countries
bind_rows(OPERATIONS_UNIQUE_DEST%>%
group_by(DEST = "average across all destinations")%>%
summarise(across(where(is.numeric), ~ sum(., na.rm=T))))%>%
mutate(FX_CONTRIB_PP = FX_CONTRIB / N_RETURNEES)%>%
arrange(desc(FX_CONTRIB_PP))
CONTRIB_PP_BY_DEST <- OPERATIONS_UNIQUE_DEST %>%
group_by(DEST)%>%
summarise(across(where(is.numeric), ~ sum(., na.rm=T)))%>%
# add average across countries
bind_rows(OPERATIONS_UNIQUE_DEST%>%
group_by(DEST = "average across all destinations")%>%
summarise(across(where(is.numeric), ~ sum(., na.rm=T))))%>%
mutate(FX_CONTRIB_PP = FX_CONTRIB / N_RETURNEES)%>%
arrange(desc(FX_CONTRIB_PP))%>%
# add ISO-codes for X-axis labels from world bank data
left_join(wb_cachelist$countries %>%
select(iso = iso2c, country_name = country)%>%
mutate(country_name = str_replace_all(country_name,
c("Congo, Dem\\. Rep\\." = "Congo DR",
"Gambia, The" = "Gambia",
"Egypt, Arab Rep\\." = "Egypt",
"Russian Federation" = "Russia"
))),
by = c("DEST" = "country_name"))%>%
mutate(iso = case_when(DEST == "average across all destinations" ~ "",
TRUE ~ iso))%>%
# only include those with at least 10 returnees, otherwise maybe distorted
filter(N_RETURNEES >= 10)%>%
head(26)
needs(tidyverse,
ggplot2,
readxl,
glue,
wbstats)
View(OPERATIONS_UNIQUE_DEST)
View(by_dest_2006_18)
View(by_ms_2006_18)
View(dests_2019_20)
## operations with one destination per MS
OPERATIONS_UNIQUE_DEST <- by_dest_2006_18 %>%
left_join(by_ms_2006_18 %>%
select(ROWID, ID))%>%
group_by(ID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ID, N_RETURNEES, DEST)%>%
left_join(by_ms_2006_18 %>%
select(ID, FX_CONTRIB))%>%
bind_rows(dests_2019_20%>%
group_by(ROID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, N_RETURNEES, DEST)%>%
left_join(costs_2019 %>%
select(ROID, FX_CONTRIB))%>%
## throw out rows that are not in 2019 costs data
filter(!is.na(FX_CONTRIB)))%>%
bind_rows(returnees_2020_2021_split %>%
group_by(ROID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, N_RETURNEES, DEST)%>%
left_join(costs_2020_2021 %>%
select(ROID, FX_CONTRIB))
)%>%
## it looks like contribution amounts were only included starting 2009.
## before 2009: exclude from averages
## after 2009: if NA, assume there was 0€ frontex contribution
filter(!(as.numeric(substr(ROWID, 1, 4)) < 2009 & !is.na(ROWID)) &
N_RETURNEES > 0) %>%
mutate(FX_CONTRIB = replace_na(FX_CONTRIB, 0))
OPERATIONS_UNIQUE_DEST <- by_dest_2006_18 %>%
left_join(by_ms_2006_18 %>%
select(ROWID, ID))%>%
group_by(ID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ID, N_RETURNEES, DEST)%>%
left_join(by_ms_2006_18 %>%
select(ID, FX_CONTRIB))%>%
bind_rows(dests_2019_20%>%
group_by(ROID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, N_RETURNEES, DEST)%>%
left_join(costs_2019 %>%
select(ROID, FX_CONTRIB))%>%
## throw out rows that are not in 2019 costs data
filter(!is.na(FX_CONTRIB)))%>%
bind_rows(returnees_2020_2021_split %>%
group_by(ROID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, N_RETURNEES, DEST)%>%
left_join(costs_2020_2021 %>%
select(ROID, FX_CONTRIB))
)
View(by_dest_2006_18)
View(by_ms_2006_18)
## operations with one destination per MS
OPERATIONS_UNIQUE_DEST <- by_dest_2006_18 %>%
left_join(by_ms_2006_18 %>%
select(ROWID, ID))%>%
group_by(ID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ID, N_RETURNEES, DEST)%>%
left_join(by_ms_2006_18 %>%
select(ID, FX_CONTRIB))%>%
bind_rows(dests_2019_20%>%
group_by(ROID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, N_RETURNEES, DEST)%>%
left_join(costs_2019 %>%
select(ROID, FX_CONTRIB))%>%
## throw out rows that are not in 2019 costs data
filter(!is.na(FX_CONTRIB)))%>%
bind_rows(returnees_2020_2021_split %>%
group_by(ROID)%>%
mutate(n_dest = n())%>%
filter(n_dest == 1)%>%
select(ROID, N_RETURNEES, DEST)%>%
left_join(costs_2020_2021 %>%
select(ROID, FX_CONTRIB))
)%>%
## with unique combinations of OPERATION and DEST, there is not much data (starting 2018 only)
# ## it looks like contribution amounts were only included starting 2009.
# ## before 2009: exclude from averages
# ## after 2009: if NA, assume there was 0€ frontex contribution
# filter(!(as.numeric(substr(ROWID, 1, 4)) < 2009 & !is.na(ROWID)) &
#          N_RETURNEES > 0) %>%
mutate(FX_CONTRIB = replace_na(FX_CONTRIB, 0))
CONTRIB_PP_BY_DEST <- OPERATIONS_UNIQUE_DEST %>%
group_by(DEST)%>%
summarise(across(where(is.numeric), ~ sum(., na.rm=T)))%>%
# add average across countries
bind_rows(OPERATIONS_UNIQUE_DEST%>%
group_by(DEST = "average across all destinations")%>%
summarise(across(where(is.numeric), ~ sum(., na.rm=T))))%>%
mutate(FX_CONTRIB_PP = FX_CONTRIB / N_RETURNEES)%>%
arrange(desc(FX_CONTRIB_PP))%>%
# add ISO-codes for X-axis labels from world bank data
left_join(wb_cachelist$countries %>%
select(iso = iso2c, country_name = country)%>%
mutate(country_name = str_replace_all(country_name,
c("Congo, Dem\\. Rep\\." = "Congo DR",
"Gambia, The" = "Gambia",
"Egypt, Arab Rep\\." = "Egypt",
"Russian Federation" = "Russia"
))),
by = c("DEST" = "country_name"))%>%
mutate(iso = case_when(DEST == "average across all destinations" ~ "",
TRUE ~ iso))%>%
# only include those with at least 10 returnees, otherwise maybe distorted
filter(N_RETURNEES >= 10)%>%
head(26)
View(CONTRIB_PP_BY_DEST)
write_csv(CONTRIB_PP_BY_DEST, "../clean_data/CONTRIB_PP_BY_DEST_new.csv")
